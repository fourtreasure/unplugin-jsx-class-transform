name: CI

on:
  push:
    branches: [master]
    tags:
      - 'v*'
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.2

      - name: Setup Node
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16.x
          cache: pnpm

      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: Lint
        run: pnpm run lint

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.2

      - name: Setup Node
        uses: actions/setup-node@v3.4.1
        with:
          node-version: 16.x
          cache: pnpm

      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: TypeCheck
        run: pnpm run typecheck

  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node-version: [16.x, 18.x]
        os: [ubuntu-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: Unit Test
        run: pnpm run test:run

  publish:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    needs: [lint, typecheck, test]
    environment: NPM

    steps:
      - uses: actions/checkout@v3

      - name: Setup PNPM
        uses: pnpm/action-setup@v2.2.2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3.4.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Install
        run: pnpm install --no-frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Publish
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
